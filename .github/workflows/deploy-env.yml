name: Deploy Elastic Beanstalk Environment

on:
  workflow_call:
    inputs:
      deploy_matrix:
        description: "A JSON list of objects, each specifying the Elastic Beanstalk application and environment names, along with the region."
        required: true
        type: string
      version_label:
        description: "The Elastic Beanstalk version label"
        required: true
        type: string
      notify_honeybadger:
        description: "Whether or not to notify HoneyBadger"
        required: false
        type: boolean
      notify_new_relic:
        description: "Whether or not to notify New Relic"
        required: false
        type: boolean
    secrets:
      EB_AWS_ACCESS_KEY_ID:
        description: "The AWS Access Key ID you would like to deploy with (e.g. prod or staging)"
        required: true
      EB_AWS_SECRET_ACCESS_KEY:
        description: "The AWS Secret Access Key you would like to deploy with (e.g. prod or staging)"
        required: true
      DEPLOY_FAILURES_SLACK_WEBHOOK_URL:
        description: "The Slack webhook url that maps to a Slack channel. This channel will be notified after a failed deploy."
        required: true
      DEPLOY_SUCCESS_SLACK_WEBHOOK_URL:
        description: "The Slack webhook url that maps to a Slack channel. This channel will be notified after a successful deploy."
        required: true
      LOOKUP_USER_EMAIL_SLACK_TOKEN:
        description: "A token to look up users by email and message them directly. This requires the GitHub & Slack email to match, and the 'Keep my email addresses private' option disabled. No failures occur in other cases."
        required: true
      # Optional secrets
      HONEYBADGER_JS_API_KEY:
        description: "The HoneyBadger JS API Key. Required if notify_honeybadger is true"
        required: false
      NEW_RELIC_API_KEY:
        description: "The New Relice API Key. Required if notify_new_relic is true"
        required: false
      NEW_RELIC_ACCOUNT_ID:
        description: "The New Relic Account ID. Required if notify_new_relic is true"
        required: false
      NEW_RELIC_APPLICATION_ID:
        description: "The New Relic Application ID. Required if notify_new_relic is true"
        required: false


jobs:
  deploy-elasticbeanstalk:
    name: "Deploy Elastic Beanstalk"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          ${{ fromJson(inputs.deploy_matrix) }}
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v2
        with:
          name: eb-app-zip
      - name: Upload application zip to S3 and create EB application version
        uses: rewindio/beanstalk-deploy@v21-beta
        with:
          aws_access_key: ${{ secrets.EB_AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.EB_AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ matrix.app }}
          environment_name: ${{ matrix.env }}
          version_label: ${{ inputs.version_label }} 
          version_description: Commit ${{github.sha}} deployed by github actions
          region: ${{ matrix.region }}
          deployment_package: deploy.zip
          use_existing_version_if_available: true
          wait_for_deployment: true
          wait_for_environment_recovery: 60
          max_backoff_retries: 13

      - name: Set commit title
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
        continue-on-error: true
        # We take the first line (%s) from the git log and then escape out any single quotes
        # https://stackoverflow.com/a/24247870
        run: echo COMMIT_MESSAGE=$(git log -n 1 --pretty=format:%s) >> $GITHUB_ENV

      - name: Notify Slack on Success
        uses: ravsamhq/notify-slack-action@v1
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{emoji} <{run_url}|{workflow}> to ${{ matrix.app }} in ${{ matrix.region }} (${{ matrix.env }}) has {status_message}'
          message_format: >
            ${{ github.actor }} pushed <{commit_url}|${{ env.COMMIT_TITLE }}>
          footer: '<{repo_url}|{repo}>'
          notify_when: 'success'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DEPLOY_SUCCESS_SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        uses: ravsamhq/notify-slack-action@v1
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{emoji} <{run_url}|{workflow}> to ${{ matrix.app }} in ${{ matrix.region }} (${{ matrix.env }}) has {status_message}'
          message_format: >
            ${{ github.actor }} pushed <{commit_url}|${{ env.COMMIT_TITLE }}>
          footer: '<{repo_url}|{repo}>'
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DEPLOY_FAILURES_SLACK_WEBHOOK_URL }}

      - name: Find Slack user
        if: failure()
        id: find-slack-user
        uses: scribd/find-slack-user-action@v1
        with:
          include-at-symbol: true
          slack-token: ${{ secrets.LOOKUP_USER_EMAIL_SLACK_TOKEN }}

      - name: Send a Slack DM to the user linking the failure
        if: failure()
        uses: archive/github-actions-slack@v2.2.1
        with:
          slack-function: send-message
          slack-bot-user-oauth-access-token: ${{ secrets.LOOKUP_USER_EMAIL_SLACK_TOKEN }}
          slack-channel: "${{ steps.find-slack-user.outputs.username }}"
          slack-text: |
            <@${{ steps.find-slack-user.outputs.member-id }}>: <${{ env.RUN_URL }}|${{ env.COMMIT_TITLE }}> has failed.
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Mark Release in HoneyBadger
        if: inputs.notify_honeybadger == true
        uses: honeybadger-io/github-notify-deploy-action@v1
        with:
          api_key: ${{ secrets.HONEYBADGER_JS_API_KEY }}
          environment: ${{ matrix.env }}

      - name: Mark Release in New Relic
        if: inputs.notify_new_relic == true
        uses: newrelic/deployment-marker-action@v1
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          accountId: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
          applicationId: ${{ secrets.NEW_RELIC_APPLICATION_ID }}
          revision: "${{ github.ref }}-${{ github.sha }}"
          user: "${{ github.actor }}"
