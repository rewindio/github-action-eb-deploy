name: Set-up ElasticBeanstalk Extensions

on:
  workflow_call:
    inputs:
      docker_ruby_version:
        description: "The version of Ruby to be used by the job container"
        default: "2.6.8"
        required: false
        type: "string"
      gemfile_suffix:
        description: "The suffix to add to the Gemfile (for multi-gem projects). Should begin with '.' if your Gemfile is named 'Gemfile.foo'."
        default: ""
        required: false
        type: "string"
      eb_ext_branch:
        description: "The Elasticbeanstalk Extension branch to use"
        required: true
        default: "main"
      eb_hook_branch:
        description: "The Elasticbeanstalk Hook branch to use"
        required: true
        default: "main"

    secrets:
      BUNDLE_RUBYGEMS__PKG__GITHUB__COM:
        description: "Credentials for working with Ruby gems during the build phase"
        required: true
      BUNDLE_GEMS__CONTRIBSYS__COM:
        description: "Credentials for working with Ruby gems during the build phase"
        required: true
      CONTAINER_REGISTRY_PAT:
        description: "The token for the container registry, to work with private images"
        required: true

jobs:
  environment-setup:
    name: Preprocess EB Extensions

    runs-on: ubuntu-latest

    container:
      image: rewindio/docker-amazonlinux2-ruby:${{ inputs.docker_ruby_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure bundler
        run: |
          mkdir -p vendor/bundle
          mkdir -p vendor/cache
          bundle config set --local path vendor/bundle
          bundle config set --local cache vendor/cache
          bundle config set --local gemfile Gemfile${{ inputs.gemfile_suffix }}

      - name: bundle cache
        uses: actions/cache@v2
        id: bundle-cache
        with:
          path: |
            vendor/cache
            vendor/bundle
          # Note: 'Gemfile.lock' does not have a suffix, therefore we do not use {0}.{1}.lock
          key: ${{ runner.os }}-bundle-${{ hashFiles(format('**/{0}{1}.lock', 'Gemfile', inputs.gemfile_suffix )) }}
          restore-keys: |
            ${{ runner.os }}-bundle-

      # Extensions caches need to be per commit because the extensions can change
      # without the underlying requirements.yml file changing
      # We are really only using the cache to pass to the next job
      - name: extensions cache
        uses: actions/cache@v2
        id: extensions-cache
        with:
          path: .ebextensions
          key: ${{ runner.os }}-extensions-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-extensions-${{ github.sha }}

      - name: hooks cache
        uses: actions/cache@v2
        id: hooks-cache
        with:
          path: .platform
          key: ${{ runner.os }}-extensions-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-platform-${{ github.sha }}

      - name: bundle install
        if: steps.bundle-cache.outputs.cache-hit != 'true'
        env:
          BUNDLE_RUBYGEMS__PKG__GITHUB__COM: ${{ secrets.BUNDLE_RUBYGEMS__PKG__GITHUB__COM }}
          BUNDLE_GEMS__CONTRIBSYS__COM: ${{ secrets.BUNDLE_GEMS__CONTRIBSYS__COM }}
        run: |
          bundle install --without test development integration --jobs 4 --retry 3
          bundle clean --force

      # Pre-process the Beanstalk extensions and hooks
      # We always want to do this in case an extension changes in the extensions/hooks repos
      - name: Checkout EB extensions
        uses: actions/checkout@v2
        with:
          repository: rewindio/eb-extensions
          ref: ${{ github.event.inputs.eb_ext_branch }}
          token: ${{ secrets.CONTAINER_REGISTRY_PAT }}
          path: tmp/eb-extensions

      - name: Checkout EB hooks
        uses: actions/checkout@v2
        with:
          repository: rewindio/eb-platform-hooks
          ref: ${{ github.event.inputs.eb_hook_branch }}
          token: ${{ secrets.CONTAINER_REGISTRY_PAT }}
          path: tmp/eb-platform-hooks

      - name: Preprocess EB extensions
        run:
          ./tmp/eb-extensions/copy_extensions.rb --extensions_dir ./tmp/eb-extensions/extensions

      - name: Preprocess EB hooks
        run:
          ./tmp/eb-platform-hooks/copy_hooks.rb --hooks_dir ./tmp/eb-platform-hooks/hooks

  create-deployment-zip:
    name: "Create Deployment Zip"
    needs: [ environment-setup ]

    runs-on: ubuntu-latest

    container:
      image: rewindio/docker-amazonlinux2-ruby:${{ inputs.docker_ruby_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: bundle cache
        uses: actions/cache@v2
        id: bundle-cache
        with:
          path: |
            vendor/cache
            vendor/bundle
          key: ${{ runner.os }}-bundle-${{ hashFiles(format('**/{0}{1}.lock', 'Gemfile', inputs.gemfile_suffix )) }}
          restore-keys: |
            ${{ runner.os }}-bundle-

      - name: extensions cache
        uses: actions/cache@v2
        id: extensions-cache
        with:
          path: .ebextensions
          key: ${{ runner.os }}-extensions-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-extensions-${{ github.sha }}

      - name: hooks cache
        uses: actions/cache@v2
        id: hooks-cache
        with:
          path: .platform
          key: ${{ runner.os }}-extensions-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-platform-${{ github.sha }}

      - name: Create zip
        run:
          zip -r deploy.zip . -x '*.git*' 'log/*.log' 'integration-tests/**'

      - name: Archive application zip
        uses: actions/upload-artifact@v2
        with:
          name: eb-app-zip
          path: deploy.zip
